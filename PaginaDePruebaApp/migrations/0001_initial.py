# Generated by Django 3.2 on 2021-04-30 14:09

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Combi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modelo', models.CharField(max_length=30)),
                ('cantAsientos', models.IntegerField(default=0)),
                ('cantAsientosDisponibles', models.IntegerField(default=0)),
                ('patente', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Comentario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.CharField(max_length=200)),
                ('puntuacion', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Compra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('total', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Insumo',
            fields=[
                ('nombre', models.CharField(max_length=30, primary_key=True, serialize=False, unique=True)),
                ('descripcion', models.CharField(max_length=50)),
                ('precio', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Lugar',
            fields=[
                ('nombre', models.CharField(max_length=30)),
                ('codigoPostal', models.IntegerField(primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ruta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distancia', models.PositiveIntegerField()),
                ('destino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rutaDestino', to='PaginaDePruebaApp.lugar')),
                ('origen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rutaOrigen', to='PaginaDePruebaApp.lugar')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('esCliente', models.BooleanField(default=False)),
                ('esChofer', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='PaginaDePruebaApp.user')),
                ('dni', models.IntegerField()),
                ('suspendido', models.BooleanField(default=False)),
                ('esGold', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Viaje',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fechaSalida', models.DateTimeField()),
                ('fechaLlegada', models.DateTimeField()),
                ('duracion', models.TimeField()),
                ('precio', models.FloatField()),
                ('enCurso', models.BooleanField()),
                ('finalizado', models.BooleanField()),
                ('combi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PaginaDePruebaApp.combi')),
                ('insumo', models.ManyToManyField(to='PaginaDePruebaApp.Insumo')),
                ('ruta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PaginaDePruebaApp.ruta')),
            ],
        ),
        migrations.CreateModel(
            name='Tarjeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nro', models.IntegerField()),
                ('fechaVto', models.DateTimeField()),
                ('codigo', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pasaje',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('total', models.FloatField()),
                ('pasajero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('viaje', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PaginaDePruebaApp.viaje')),
            ],
        ),
        migrations.AddField(
            model_name='combi',
            name='chofer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ClienteGold',
            fields=[
                ('cliente_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PaginaDePruebaApp.cliente')),
                ('ahorro', models.FloatField()),
            ],
            bases=('PaginaDePruebaApp.cliente',),
        ),
    ]
